// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Core: Typography Abbreviations renders 1`] = `
<Fragment>
  <h2
    id="abbreviations"
  >
    Abbreviations
  </h2>
  <p>
    Stylized implementation of HTMLâ€™s 
    <PrismCode
      className="language-html"
      component="code"
    >
      &lt;abbr&gt;
    </PrismCode>
     element for abbreviations and acronyms to show the expanded version on hover. Abbreviations have a default underline and gain a help cursor to provide additional context on hover and to users of assistive technologies.
  </p>
  <p>
    Add 
    <Property
      value=".initialism"
    />
     to an abbreviation for a slightly smaller font-size.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <p>
      <abbr
        title="Laugh Out Loud"
      >
        LOL
      </abbr>
    </p>
    <p>
      <abbr
        className="initialism"
        title="HyperText Markup Language"
      >
        HTML
      </abbr>
    </p>
  </ComponentPreview>
  <p>
    <a
      href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr"
      rel="noopener noreferrer"
      target="_blank"
    >
      Read more
    </a>
     about abbreviations.
  </p>
</Fragment>
`;

exports[`Core: Typography AkkuratMono renders 1`] = `
<Fragment>
  <h2
    id="akkurat-mono"
  >
    Akkurat Mono
  </h2>
  <p>
    The Akkurat Mono font should be used when code is to be presented, for instance with code tags.
  </p>
  <h3>
    Download
  </h3>
  <div
    className="slab slab-default slab-elevated"
  >
    <p>
      Before downloading the Akkurat Mono font, make sure to understand the correct usages of Akkurat Mono.
    </p>
    <Button
      href="/TEST/release/fonts/AkkuratMono.zip"
      icon="file_download"
      label="Akkurat Mono"
      type="executive"
    />
  </div>
</Fragment>
`;

exports[`Core: Typography Blockquotes renders 1`] = `
<Fragment>
  <h2
    id="blockquotes"
  >
    Blockquotes
  </h2>
  <p>
    For quoting blocks of content from another source within your document. Wrap 
    <PrismCode
      className="language-html"
      component="code"
    >
      &lt;blockquote&gt;
    </PrismCode>
     or 
    <Property
      value=".blockquote"
    />
     around any HTML as the quote.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <blockquote
      className="blockquote"
    >
      <p>
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.
      </p>
    </blockquote>
  </ComponentPreview>
</Fragment>
`;

exports[`Core: Typography Blockquotes renders 2`] = `
<Fragment>
  <h3>
    Naming a source
  </h3>
  <p>
    Add a 
    <PrismCode
      className="language-html"
      component="code"
    >
      &lt;footer&gt;
    </PrismCode>
     for identifying the source. Wrap the name of the source work in 
    <PrismCode
      className="language-html"
      component="code"
    >
      &lt;cite&gt;
    </PrismCode>
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <blockquote
      className="blockquote"
    >
      <p>
        Better learn balance. Balance is key. Balance good, karate good. Everything good. Balance bad, better pack up, go home. Understand?
      </p>
      <footer>
        <cite
          title="The Karate Kid (1984)"
        >
          Mr. Miyagi
        </cite>
      </footer>
    </blockquote>
  </ComponentPreview>
</Fragment>
`;

exports[`Core: Typography Blockquotes renders 3`] = `
<Fragment>
  <BlockquotesText />
  <BlockquoteWithSourceText />
</Fragment>
`;

exports[`Core: Typography Fonts renders 1`] = `
<Fragment>
  <h2
    id="font"
  >
    Font
  </h2>
  <p>
    The standard font Swedbank Pay DesignGuide uses is Arial. The included font weights you can use are: 400, 600 & 800. Both normal and italicized is available.
  </p>
</Fragment>
`;

exports[`Core: Typography Headings renders 1`] = `
<Fragment>
  <h2
    id="headings"
  >
    Headings
  </h2>
  <p>
    Swedbank Pay DesignGuide provides basic styling on all headings (h1-h6).
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <h1>
      Heading h1
    </h1>
    <h2>
      Heading h2
    </h2>
    <h3>
      Heading h3
    </h3>
    <h4>
      Heading h4
    </h4>
    <h5>
      Heading h5
    </h5>
    <h6>
      Heading h6
    </h6>
  </ComponentPreview>
  <p>
    The classes 
    <Property
      value=".h1"
    />
     through 
    <Property
      value=".h6"
    />
     are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <p
      className="h1"
    >
      .h1 heading
    </p>
    <p
      className="h2"
    >
      .h2 heading
    </p>
    <p
      className="h3"
    >
      .h3 heading
    </p>
    <p
      className="h4"
    >
      .h4 heading
    </p>
    <p
      className="h5"
    >
      .h5 heading
    </p>
    <p
      className="h6"
    >
      .h6 heading
    </p>
  </ComponentPreview>
</Fragment>
`;

exports[`Core: Typography HeroTitle renders 1`] = `
<Fragment>
  <h2
    id="hero-title"
  >
    Hero title
  </h2>
  <p>
    The class 
    <Property
      value=".hero"
    />
     can be used to achieve the big and bold hero title styling.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <h1
      className="hero"
    >
      Hero title
    </h1>
    <p
      className="hero"
    >
      Hero title
    </p>
  </ComponentPreview>
</Fragment>
`;

exports[`Core: Typography Inline renders 1`] = `
<Fragment>
  <h2
    id="inline-text-elements"
  >
    Inline text elements
  </h2>
  <p>
    Styling for common inline HTML5 elements.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <p>
      You can use the mark tag to 
      <mark>
        highlight
      </mark>
       text.
    </p>
    <p>
      <del>
        This line of text is meant to be treated as deleted text.
      </del>
    </p>
    <p>
      <s>
        This line of text is meant to be treated as no longer accurate.
      </s>
    </p>
    <p>
      <ins>
        This line of text is meant to be treated as an addition to the document.
      </ins>
    </p>
    <p>
      <u>
        This line of text will render as underlined
      </u>
    </p>
    <p>
      <small>
        This line of text is meant to be treated as fine print.
      </small>
    </p>
    <p>
      <strong>
        This line rendered as bold text.
      </strong>
    </p>
    <p>
      <b>
        This line really stands out.
      </b>
    </p>
    <p>
      <em>
        This line rendered as italicized text.
      </em>
    </p>
    <p>
      <i>
        This is the last line, it too will render as italicized text.
      </i>
    </p>
  </ComponentPreview>
  <p>
    The 
    <Property
      value=".mark"
    />
     and 
    <Property
      value=".small"
    />
     classes are also available to apply the same styles as 
    <PrismCode
      className="language-html"
      component="code"
    >
      &lt;mark&gt;
    </PrismCode>
     and 
    <PrismCode
      className="language-html"
      component="code"
    >
      &lt;small&gt;
    </PrismCode>
     while avoiding any unwanted semantic implications that the tags would bring.
  </p>
  <p>
    While not shown above, feel free to use 
    <PrismCode
      className="language-html"
      component="code"
    >
      &lt;b&gt;
    </PrismCode>
     and 
    <PrismCode
      className="language-html"
      component="code"
    >
      &lt;i&gt;
    </PrismCode>
     in HTML5. 
    <PrismCode
      className="language-html"
      component="code"
    >
      &lt;b&gt;
    </PrismCode>
     is meant to highlight words or phrases without conveying additional importance while 
    <PrismCode
      className="language-html"
      component="code"
    >
      &lt;i&gt;
    </PrismCode>
     is mostly for voice, technical terms, etc.
  </p>
</Fragment>
`;

exports[`Core: Typography Lead renders 1`] = `
<Fragment>
  <h2
    id="lead"
  >
    Lead
  </h2>
  <p>
    Make a paragraph stand out by using 
    <Property
      value=".lead"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <p
      className="lead"
    >
      This is a leading paragraph which for instance can be used as an introduction.
    </p>
  </ComponentPreview>
</Fragment>
`;

exports[`Core: Typography ResourcesTypography renders 1`] = `
<div
  className="expandable"
>
  <button
    aria-controls="resources-typograpy-body"
    aria-expanded="false"
    className="expandable-header"
    type="button"
  >
    <span
      className="expandable-headline"
    >
      Typography guidelines
    </span>
    <small
      className="expandable-subtitle"
    >
      From 
      <Link
        to="/res/resources/typography"
      >
        typography in Resources
      </Link>
    </small>
  </button>
  <div
    className="expandable-body"
    id="resources-typography-body"
  >
    <Overview />
    <Download />
    <Guidelines />
  </div>
</div>
`;

exports[`Core: Typography Text Utilities renders 1`] = `
<Fragment>
  <h2
    id="text-utilities"
  >
    Text utilities
  </h2>
  <p>
    Change text color with our 
    <Link
      to="/docs/utilities/colors"
    >
      color utilities
    </Link>
    .
  </p>
</Fragment>
`;

exports[`Core: Typography renders 1`] = `
<DocContainer
  docToc={true}
>
  <p
    className="lead"
  >
    Documentation and examples for Swedbank Pay DesignGuide typography.
  </p>
  <ResourcesTypography />
  <Fonts />
  <Headings />
  <HeroTitle />
  <Lead />
  <Inline />
  <TextUtilities />
  <Abbreviations />
  <Blockquotes />
  <AkkuratMono />
</DocContainer>
`;
